#! /bin/sh
### BEGIN INIT INFO
# Provides:          check_wlan
# Required-Start:    $syslog $network
# Should-Start:      
# Required-Stop:     $syslog $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: wlan availability check
# Description:       check if wlan interface(s) have an ip, execute ifdown/ifup if not and restarte hostapd
### END INIT INFO

# Author: Andreas Vogel <andreas@wellenvogel.net>

###############################################################################
# Copyright (c) 2012,2015 Andreas Vogel andreas@wellenvogel.net
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation
#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
#  and/or sell copies of the Software, and to permit persons to whom the
#  Software is furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included
#  in all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
#  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
#  DEALINGS IN THE SOFTWARE.
###############################################################################
PATH=/sbin:/usr/sbin:/bin:/usr/bin
set -x

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions
CONFIG=/etc/default/check_wlan

[ -f $CONFIG ] && . $CONFIG

NAME=`basename $0`
INTERFACES="wlan0"
HOSTAPDCONF=/etc/hostapd/hostapd.conf

case "$1" in
  start)
        log_daemon_msg "Starting background $NAME"
        /etc/init.d/$NAME workersilent &
        log_end_msg 0
        exit 0
        ;;
  workersilent)
  		nostdout=1
  		;;
  worker)
        ;;
  stop)
  		killall $NAME
  		;;
  *)
        log_daemon_msg "we only have an action on start"
        log_end_msg 0
        exit 0
        ;;
esac


#for some strange reasons sometimes the WLAN if seems to disappear
#so we check if it is there, if not - try to restart and restart hostapd
#additionally we check if we have a RTL81xx adapter and change the hostapd

err(){
  errlog "$*"
  exit 1
}
errlog(){
  [ "$nostdout" != "1" ] && echo "ERROR: $*"
  logger -t avwlan "ERROR: $*"
}

wlog(){
  [ "$nostdout" != "1" ] &&  echo "INFO: $*"
  logger -t avwlan "INFO: $*"
}

checkHostapd(){
  if [ "$NO_HOSTAPD_SWITCH" != "" ] ; then
    return
  fi
  rtlusb=`lsusb | grep -i rtl81`
  lsmod=`lsmod | grep 8192cu`
  if [ "$2" = "forceNormal" ] ; then
    rtlusb=""
    lsmod=""
  fi
  needStart=$1
  if [ "$rtlusb" != "" -a "$lsmod" != "" ] ; then
    wlog "rtl81xx wlan module detected"
    needSwitch=`grep '##*driver=rtl' $HOSTAPDCONF`
    if [ "$needSwitch" != "" ] ; then
      wlog "switch hostapd"
      if [ "$needStart" != 2 ] ; then
        service hostapd stop
      fi
      cd /usr/sbin && rm hostapd && ln -s hostapd.edimax hostapd
      sed -i -e 's/^[#][#]*driver=rtl/driver=rtl/' -e 's/driver=nl80/#driver=nl80/' $HOSTAPDCONF
      needStart=1
    fi
  else
    wlog "standard wlan module - or none: default settings"
    needSwitch=`grep '^ *driver=nl80' $HOSTAPDCONF`
    if [ "$needSwitch" = "" -o "$2" = "forceNormal" ] ; then
      wlog "switch hostapd"
      if [ "$needStart" != 2 ] ; then
        service hostapd stop
      fi
      cd /usr/sbin && rm hostapd && ln -s hostapd.ori hostapd
      sed -i -e 's/^ *[#][#]*driver=nl80/driver=nl80/' -e 's/driver=rtl/#driver=rtl/' $HOSTAPDCONF
      needStart=1
    fi
  fi
  if [ "$needStart" != "" ] ; then
    systemctl daemon-reload
    service hostapd start
  fi
}

wlog "avnav wlan check started with pid $$"
service hostapd stop
checkHostapd 1 forceNormal
first=1
firstNoUsb=1
while [ 1 = 1 ] 
do
	for if in `echo $INTERFACES`
	do
		addr=`LANG=C ifconfig $if | awk '/inet addr/{sub("addr:","",$2);print $2;}'`
                if [ ! -e /sys/class/net/$if ] ; then
                  if [ "$first" = 1 ] ; then
                   wlog "no interface $if found, keep looping"
                   first=0
                  fi
                else
                  doCheck=1
		  isUsb=`cat /sys/class/net/$if/device/uevent | grep DEVTYPE|grep usb`
		  if [ "$isUsb" = "" ] ; then
                    if [ "$firstNoUsb" = 1 ] ; then
                     wlog "interface $if is no usb interface, keep looping"
                     firstNoUsb=0
                    fi
                    doCheck=0
                  fi
                  first=1
                  if [ "$doCheck" = 1 ] ; then
                    if [ "$addr" = "" ] ; then
                          service hostapd stop
                          errlog "interface $if has no address, trying to restart"
                          ifdown $if
                          sleep 5
                          service hostapd start
                          sleep 5
                          addr2=`LANG=C ifconfig $if | awk '/inet addr/{sub("addr:","",$2);print $2;}'`
                          if [ "$addr2" != "" ] ; then
                                  wlog "interface $if now up with address $addr2"
                                  checkHostapd 1
                                  wlog "restart hostapd finished"
                          else
                                  errlog "unable to restart interface $if"
                          fi 
                    fi
                    ps -ef | grep -v grep| grep hostapd  > /dev/null 2>&1
                    if [ $? != 0 ] ; then
                      wlog "hostapd not running, check if we need to switch"
                      checkHostapd 1
                    fi
                  fi
                fi
	done
	sleep 10
done
