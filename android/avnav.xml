<?xml version="1.0" encoding="UTF-8"?>
<project name="avnav" default="all">
  
  
  <property file="avnav.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.android_api_21_platform" value="${jdk.home.android_api_21_platform}/../../lib/jvm/java-7-openjdk-amd64/bin"/>
  <path id="jdk.classpath.android_api_21_platform">
    <fileset dir="${jdk.home.android_api_21_platform}">
      <include name="platforms/android-21/android.jar"/>
      <include name="platforms/android-21/data/res"/>
      <include name="tools/support/annotations.jar"/>
      <include name="../../lib/jvm/java-7-openjdk-amd64/lib/tools.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.android_api_21_platform}"/>
  <property name="project.jdk.bin" value="${jdk.bin.android_api_21_platform}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.android_api_21_platform"/>
  
  <!-- Modules -->
  
  
  <!-- Module avNav -->
  
  <dirname property="module.avnav.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.avnav" value="${jdk.home.android_api_21_platform}"/>
  <property name="module.jdk.bin.avnav" value="${jdk.bin.android_api_21_platform}"/>
  <property name="module.jdk.classpath.avnav" value="jdk.classpath.android_api_21_platform"/>
  
  <property name="compiler.args.avnav" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="avnav.output.dir" value="${module.avnav.basedir}/classes/production/avNav"/>
  <property name="avnav.testoutput.dir" value="${module.avnav.basedir}/classes/test/avNav"/>
  
  <path id="avnav.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="avnav.module.production.classpath">
    <path refid="${module.jdk.classpath.avnav}"/>
  </path>
  
  <path id="avnav.runtime.production.module.classpath">
    <pathelement location="${avnav.output.dir}"/>
  </path>
  
  <path id="avnav.module.classpath">
    <path refid="${module.jdk.classpath.avnav}"/>
    <pathelement location="${avnav.output.dir}"/>
  </path>
  
  <path id="avnav.runtime.module.classpath">
    <pathelement location="${avnav.testoutput.dir}"/>
    <pathelement location="${avnav.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.avnav">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.avnav">
    <patternset refid="excluded.from.module.avnav"/>
  </patternset>
  
  <path id="avnav.module.sourcepath">
    <dirset dir="${module.avnav.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/resources"/>
      <include name="gen"/>
    </dirset>
  </path>
  
  <path id="avnav.module.test.sourcepath">
    <dirset dir="${module.avnav.basedir}">
      <include name="src/test/java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.avnav" depends="compile.module.avnav.production,compile.module.avnav.tests" description="Compile module avNav"/>
  
  <target name="compile.module.avnav.production" description="Compile module avNav; production classes">
    <mkdir dir="${avnav.output.dir}"/>
    <javac destdir="${avnav.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.avnav}/javac">
      <compilerarg line="${compiler.args.avnav}"/>
      <bootclasspath refid="avnav.module.bootclasspath"/>
      <classpath refid="avnav.module.production.classpath"/>
      <src refid="avnav.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.avnav"/>
    </javac>
    
    <copy todir="${avnav.output.dir}">
      <fileset dir="${module.avnav.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.avnav.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.avnav.basedir}/gen">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.avnav.tests" depends="compile.module.avnav.production" description="compile module avNav; test classes" unless="skip.tests">
    <mkdir dir="${avnav.testoutput.dir}"/>
    <javac destdir="${avnav.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.avnav}/javac">
      <compilerarg line="${compiler.args.avnav}"/>
      <bootclasspath refid="avnav.module.bootclasspath"/>
      <classpath refid="avnav.module.classpath"/>
      <src refid="avnav.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.avnav"/>
    </javac>
    
    <copy todir="${avnav.testoutput.dir}">
      <fileset dir="${module.avnav.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.avnav" description="cleanup module">
    <delete dir="${avnav.output.dir}"/>
    <delete dir="${avnav.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.avnav" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.avnav" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.avnav-debug" value="${basedir}/artifacts/avNav_debug"/>
    <property name="artifact.output.avnav-release" value="${basedir}/artifacts/avNav_release"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.avNav-debug.apk" value="${artifacts.temp.dir}/avNav-debug.apk"/>
    <property name="temp.jar.path.avNav-release.apk" value="${artifacts.temp.dir}/avNav-release.apk"/>
  </target>
  
  <target name="artifact.avnav-debug" depends="init.artifacts, compile.module.avnav" description="Build &#39;avNav-debug&#39; artifact">
    <property name="artifact.temp.output.avnav-debug" value="${artifacts.temp.dir}/avNav_debug"/>
    <mkdir dir="${artifact.temp.output.avnav-debug}"/>
    <ant antfile="build.xml" target="copy-assets" dir="${basedir}">
      <property name="artifact.output.path" value="${artifact.temp.output.avnav-debug}"/>
    </ant>
    <zip destfile="${temp.jar.path.avNav-debug.apk}"/>
    <copy file="${temp.jar.path.avNav-debug.apk}" tofile="${artifact.temp.output.avnav-debug}/avNav-debug.apk"/>
  </target>
  
  <target name="artifact.avnav-release" depends="init.artifacts, compile.module.avnav" description="Build &#39;avNav-release&#39; artifact">
    <property name="artifact.temp.output.avnav-release" value="${artifacts.temp.dir}/avNav_release"/>
    <mkdir dir="${artifact.temp.output.avnav-release}"/>
    <ant antfile="build.xml" target="copy-assets" dir="${basedir}">
      <property name="artifact.output.path" value="${artifact.temp.output.avnav-release}"/>
    </ant>
    <zip destfile="${temp.jar.path.avNav-release.apk}"/>
    <copy file="${temp.jar.path.avNav-release.apk}" tofile="${artifact.temp.output.avnav-release}/avNav-release.apk"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.avnav-debug, artifact.avnav-release" description="Build all artifacts">
    <mkdir dir="${artifact.output.avnav-debug}"/>
    <copy todir="${artifact.output.avnav-debug}">
      <fileset dir="${artifact.temp.output.avnav-debug}"/>
    </copy>
    <mkdir dir="${artifact.output.avnav-release}"/>
    <copy todir="${artifact.output.avnav-release}">
      <fileset dir="${artifact.temp.output.avnav-release}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>